refactor example to use nosetest
make your own diagrams
see if you can build python Taus into your code
see if you can add the program examples

# ==== Test leftovers ====
# 
# * Tests should be automated, and easily executable
# * Tests the ''units'' with a predefined input, to ascertain they return the expected output
# * Today, any software without unit tests is considered ''legacy software''
# * Usually automated so that all unit tests can be executed with a single command
# 
# * The smallest possible testable part of an application.
# * In python this is a function or method
# * Examples:
# ** function to compute the euclidian distance
# ** decimal to binary converter
# ** sort function
# 
# <[code]
# import numpy
# import unittest
# 
# def euclidian_distance(x, y):
#     return numpy.sqrt(sum((x - y)**2))
# 
# class TestEuclid(unittest.TestCase):
#     def test_scalar(self):
#         self.assertEqual(
#             euclidian_distance(
#             numpy.array(\[2\]), numpy.array(\[3\])),1.0)
#     def test_vector(self):
#         self.assertEqual(
#             euclidian_distance(
#             numpy.array(\[2,2\]), numpy.array(\[5,6\])), 5.0)
# 
# if __name__ == "__main__":
#     unittest.main()
# [code]>



